/* =================================
    ALL MAIN STYLE IMPORTS
================================= */
/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
@import url(http://fonts.googleapis.com/css?family=Squada+One);
@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700);
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* =================================
        GLOBAL STYLES
================================= */
/* ===============
      FONTS
================= */
/* ===============
      GLOBAL VARS
================= */
/* ======================
      ANIMATIONS
========================= */
@-webkit-keyframes lightsOn--anim {
  from {
    background: white;
    color: #3F3F3F;
  }
}
@keyframes lightsOn--anim {
  from {
    background: white;
    color: #3F3F3F;
  }
}

@-webkit-keyframes lightsOff--anim {
  from {
    background: #3F3F3F;
    color: white;
  }
}

@keyframes lightsOff--anim {
  from {
    background: #3F3F3F;
    color: white;
  }
}

/* ======================
      HELPER CLASSES
========================= */
.lightsOn {
  background: #3F3F3F;
  color: white;
  -webkit-animation-duration: 1.25s;
          animation-duration: 1.25s;
  -webkit-animation-name: lightsOn--anim;
          animation-name: lightsOn--anim;
  -webkit-animation-fill-mode: alternate-reverse;
          animation-fill-mode: alternate-reverse;
}

.lightsOff {
  background: white;
  color: #3F3F3F;
  -webkit-animation-duration: 1.25s;
          animation-duration: 1.25s;
  -webkit-animation-name: lightsOff--anim;
          animation-name: lightsOff--anim;
  -webkit-animation-fill-mode: alternate-reverse;
          animation-fill-mode: alternate-reverse;
}

/* =================================
        COMPONENT STYLES
================================= */
/* =================================
    BUTTON COMPONENT STYLES
================================= */
button {
  cursor: pointer;
  overflow: hidden;
  outline: none;
  color: white;
  position: relative;
  letter-spacing: 0.1em;
  font-weight: 400;
  padding: 1em 1em;
  text-transform: uppercase;
  font-size: 0.85em;
}

.btn--add button {
  color: #78c98d;
  background: #d0f9c7;
  border: none;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

.btn--add button:hover {
  background: transparent;
  color: #d0f9c7;
}

.btn--add button:hover:before {
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
  width: 100%;
}

.btn--add button:hover:after {
  -webkit-transition: all 0.25s ease;
  transition: all 0.25s ease;
  width: 100%;
}

.btn--add button:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 3px;
  background: #d0f9c7;
  -webkit-transition: all 0.25s ease;
  transition: all 0.25s ease;
}

.btn--add button:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 3px;
  background: #d0f9c7;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
  top: inherit;
  left: inherit;
  bottom: 0;
  right: 0;
}

.btn--delete button {
  color: #e87869;
  background: #ffc5bd;
  border: none;
  -webkit-transition: all 0.7s ease;
  transition: all 0.7s ease;
}

.btn--delete button:hover {
  background: transparent;
  color: #ffc5bd;
}

.btn--delete button:hover:before {
  -webkit-transition: all 0.7s ease;
  transition: all 0.7s ease;
  width: 100%;
}

.btn--delete button:hover:after {
  -webkit-transition: all 0.7s ease;
  transition: all 0.7s ease;
  width: 100%;
}

.btn--delete button:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 3px;
  background: #ffc5bd;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
}

.btn--delete button:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 3px;
  background: #ffc5bd;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
  top: inherit;
  left: inherit;
  bottom: 0;
  right: 0;
}

/* =================================
    NOTES REGION COMPONENT STYLES
================================= */
.notesForm {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 0vh;
  margin: auto auto;
  overflow: hidden;
  box-shadow: 0px 0px 80px 20px #e1e1e1;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

.notesForm .toggle--noteForm {
  position: absolute;
  font-size: 4em;
  z-index: 1;
  right: -6px;
  top: -0.88em;
  color: #78c98d;
  cursor: pointer;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
}

.notesForm .toggle--noteForm:before {
  content: "Add New Note";
  text-transform: uppercase;
  position: relative;
  top: -0.75em;
  left: 1.88em;
  white-space: nowrap;
  font-size: 1rem;
  letter-spacing: 0.1em;
  border-bottom: 2px solid #78c98d;
  padding-bottom: 0.2em;
  padding-left: 1em;
  padding-right: 2em;
  padding-top: 0.2em;
  background-color: #d0f9c7;
  z-index: -1;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
}

.notesForm .toggle--noteForm:hover {
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
  background: transparent;
  color: #d0f9c7;
}

.notesForm .toggle--noteForm:hover:before {
  -webkit-transition: all 0.27s ease;
  transition: all 0.27s ease;
  background-color: #78c98d;
  border-bottom: 2px solid #d0f9c7;
}

.notesForm textarea {
  position: relative;
  display: block;
  padding: 3em 0;
  padding-top: 5em;
  width: 100%;
  box-sizing: border-box;
  border: none;
  border-bottom-right-radius: 0px;
  border-bottom-left-radius: 0px;
  border-top-left-radius: 3px;
  border-top-right-radius: 0px;
  color: rgba(51, 51, 51, 0.27);
  -webkit-transition: all 0.3s cubic-bezier(1, 0.1, 0, 0.9);
  transition: all 0.3s cubic-bezier(1, 0.1, 0, 0.9);
  opacity: 0.95;
  box-shadow: inset 0px -40px 40px -10px rgba(63, 63, 63, 0.45);
  height: 100%;
}

.notesForm textarea::-webkit-input-placeholder {
  font-size: 1.25em;
  padding-left: 1em;
  color: rgba(51, 51, 51, 0.27);
}

.notesForm textarea:focus {
  outline: none;
  padding-top: 5em;
  border: none;
  font-size: 0.85em;
  opacity: 0.85;
  padding-left: 2em;
  color: #3B3B3B;
  box-shadow: inset -1px -15px 95px 8px rgba(63, 63, 63, 0.3);
  height: 100%;
}

.notesForm textarea:focus + label {
  -webkit-transform: translateZ(0) translateY(-100%);
          transform: translateZ(0) translateY(-100%);
}

.notesForm label {
  position: absolute;
  top: 0em;
  bottom: 0;
  left: 0;
  height: 3em;
  line-height: 3em;
  font-size: 0.9em;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: .05em;
  color: #6aa1ae;
  background: #d0e7ed;
  -webkit-transition: all 0.3s cubic-bezier(1, 0.1, 0, 0.9);
  transition: all 0.3s cubic-bezier(1, 0.1, 0, 0.9);
  -webkit-transform: translateZ(0) translateX(0);
          transform: translateZ(0) translateX(0);
  width: 100%;
  border-radius: 3px 3px 0 0;
  z-index: 2;
}

.notesForm .btn--add {
  font-size: 1.25em;
  position: absolute;
  right: 0;
  bottom: 0;
  opacity: 1;
}

.notesForm .btn--add button {
  position: relative;
  width: 10em;
}

@media (min-width: 320px) and (max-width: 960px) {
  .notesForm .btn--add button {
    font-size: 0.75em;
  }
}

label.toggle--label {
  font-size: 1.35em;
  position: fixed;
  bottom: 2vh;
  left: 0.45em;
  display: block;
  background: #78c98d;
  color: white;
  border: 3px solid #d0f9c7;
  text-transform: uppercase;
  width: 5em;
  height: 1.75em;
  cursor: pointer;
  text-align: center;
  padding-top: 0.75em;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
  z-index: 5;
  border-radius: 5px;
}

input#notesForm--toggle:checked ~ .notesForm {
  height: 20vh;
}

input#notesForm--toggle:checked ~ .toggle--label {
  bottom: 25vh;
}

input#notesForm--toggle {
  display: none;
}

span.toggle--plus {
  font-size: 1.5em;
  position: absolute;
  left: 0;
  top: 0;
}

.list--notes {
  position: relative;
  width: 75%;
  margin: auto auto;
  height: 100vh;
  border: 2px solid rgba(59, 59, 59, 0.1);
  border-bottom: none;
  border-right: none;
  border-left: none;
  box-shadow: 0px -3px 0px rgba(59, 59, 59, 0.15);
  box-sizing: border-box;
}

.list--notes::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 5px;
}

.list--notes::-webkit-scrollbar-thumb {
  border-radius: 1px;
  background-color: rgba(0, 0, 0, 0.2);
  -webkit-box-shadow: 0 0 2px rgba(255, 255, 255, 0.5);
}

.list--notes .list--note {
  font-size: 1.15em;
}

.list--notes .list--items {
  padding: 0.5em 0em;
}

.list--notes .list--items:after {
  content: '';
  position: absolute;
  width: 93.5%;
  left: 0;
  right: 0;
  border-bottom: 2px solid #ffe3df;
}

.list--notes .btn--delete {
  text-align: right;
  margin-bottom: -2px;
}

/* =================================
    HEADER REGION COMPONENT STYLES
================================= */
.primary-header {
  display: block;
  border-bottom: 2px solid rgba(51, 51, 51, 0.27);
  margin-bottom: 2.25em;
}

.primary-header .lists--container {
  display: inline-block;
  width: 65%;
  text-align: center;
  text-transform: uppercase;
  vertical-align: top;
  position: relative;
}

@media (min-width: 320px) and (max-width: 960px) {
  .primary-header .lists--container {
    width: 80%;
    display: block;
    overflow: hidden;
    height: 30vh;
    margin: auto auto;
  }
}

.primary-header .lists--container .home-page {
  font-size: 2.85em;
  display: inline-block;
  width: 70vw;
  text-align: center;
  text-transform: uppercase;
  vertical-align: bottom;
  text-shadow: 0px -1px 3px #6aa1ae;
  opacity: 0.7;
  cursor: pointer;
}

@media (min-width: 320px) and (max-width: 960px) {
  .primary-header .lists--container .home-page {
    font-size: 1.5em;
  }
}

.primary-header .lists--container .home-page h1 {
  margin: 0.75em auto;
}

.primary-header .lists--options {
  display: inline-block;
  width: 20vw;
  border-right: 2px solid rgba(51, 51, 51, 0.27);
  margin: 0.5em auto;
}

@media (min-width: 320px) and (max-width: 960px) {
  .primary-header .lists--options {
    width: 100vw;
  }
}

.primary-header .lists--options ul {
  margin: 1.2em auto;
  padding: 0;
  position: relative;
  width: 85%;
  list-style-type: none;
}

@media (min-width: 320px) and (max-width: 960px) {
  .primary-header .lists--options ul {
    width: 50%;
  }
}

.primary-header .lists--options ul li {
  text-align: center;
  background: #6aa1ae;
  border: 2px solid #d0e7ed;
  width: 100%;
  cursor: pointer;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
  z-index: 10;
  border-radius: 2px;
  margin: 0.25em auto;
}

.primary-header .lists--options ul li a {
  color: white;
  text-decoration: none;
  text-transform: uppercase;
  font-size: 1.15em;
  display: block;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
}

/* =================================
       LIST SPECIFFIC STYLES
==================================== */
.list--info {
  font-size: 1.25em;
  text-transform: capitalize;
  text-align: left;
  position: relative;
  width: 95%;
  margin: auto auto;
}

.list--info span:nth-child(1) {
  font-size: 1.25em;
  display: inline-block;
  font-weight: bold;
  border-bottom: 2px solid #78c98d;
  border-left: 2px solid #78c98d;
  padding-left: 3px;
  padding-bottom: 1px;
  color: #e87869;
}

.data-list {
  display: block;
  overflow: auto;
  position: absolute;
  max-height: 13.15em;
  width: 100%;
  margin: auto auto;
}

@media (min-width: 320px) and (max-width: 960px) {
  .data-list {
    margin: 3em auto;
  }
}

.data-list::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 5px;
}

.data-list::-webkit-scrollbar-thumb {
  border-radius: 1px;
  background-color: rgba(0, 0, 0, 0.2);
  -webkit-box-shadow: 0 0 2px rgba(255, 255, 255, 0.5);
}

.data-list .data-list-item {
  display: block;
  text-align: right;
  margin: 0.85em auto;
  border-bottom: 2px solid #ffe3df;
}

.data-list .data-list-item .details {
  display: inline-block;
  vertical-align: middle;
  width: 80%;
  text-align: left;
  font-size: 1.3em;
}

@media (min-width: 320px) and (max-width: 960px) {
  .data-list .data-list-item .details {
    font-size: 1em;
    width: 95%;
  }
}

.data-list .data-list-item .btn--delete {
  display: inline-block;
}

form.meetingsForm, form.quotesForm, form.salesForm {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  top: 0;
  right: 0;
}

@media (min-width: 320px) and (max-width: 960px) {
  form.meetingsForm, form.quotesForm, form.salesForm {
    top: 2.5em;
  }
}

form.meetingsForm input#meetingInput, form.meetingsForm input#quoteInput, form.meetingsForm input#saleInput, form.quotesForm input#meetingInput, form.quotesForm input#quoteInput, form.quotesForm input#saleInput, form.salesForm input#meetingInput, form.salesForm input#quoteInput, form.salesForm input#saleInput {
  text-align: center;
}

@media (min-width: 320px) and (max-width: 960px) {
  form.meetingsForm input#meetingInput, form.meetingsForm input#quoteInput, form.meetingsForm input#saleInput, form.quotesForm input#meetingInput, form.quotesForm input#quoteInput, form.quotesForm input#saleInput, form.salesForm input#meetingInput, form.salesForm input#quoteInput, form.salesForm input#saleInput {
    font-size: 0.75em;
  }
}

/* =================================
    LIGHTS BUTTON AND ICON STYLES
==================================== */
.btn--lights {
  position: fixed;
  width: 4.5em;
  right: 0;
  margin: 1em;
  cursor: pointer;
  z-index: 100;
}

@media (min-width: 320px) and (max-width: 960px) {
  .btn--lights {
    width: 3.5em;
  }
}

.btn--lights button {
  display: block;
  width: 100%;
  height: 5.4em;
  position: absolute;
  background: none;
  border: none;
}

/* =================================
    PAGE STYLES
================================= */
.home {
  text-align: center;
  background: #6aa1ae;
  border: 2px solid #d0e7ed;
  cursor: pointer;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
  z-index: 10;
  padding: 0.5em 0.5em;
  color: white;
  text-decoration: none;
  display: inline-block;
  vertical-align: bottom;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
